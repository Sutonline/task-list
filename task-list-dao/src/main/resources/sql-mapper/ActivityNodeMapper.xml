<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.kevin.dao.ActivityNodeMapper">

    <resultMap id="BaseResultMap" type="cn.kevin.domain.ActivityNode">
        <id column="node_id" property="nodeId" jdbcType="INTEGER"/>
        <result column="activity_id" property="activityId" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="sort_no" property="sortNo" jdbcType="FLOAT"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="due_time" property="dueTime" jdbcType="TIMESTAMP"/>
        <result column="warn_cnt" property="warnCnt" jdbcType="INTEGER"/>
        <result column="need_days" property="needDays" jdbcType="INTEGER" />
    </resultMap>

    <sql id="baseColumns">
        node_id, activity_id, type, sort_no, content, status,
        remark, create_time, update_time, due_time, warn_cnt, need_days
    </sql>

    <sql id="condition">
        <where>
            <if test="query.activityId != null">
                ACTIVITY_ID = #{query.activityId}
            </if>
            <if test="query.warnCnt != null">
                AND WARN_CNT = #{query.warnCnt}
            </if>
            <if test="query.dueTime != null">
                AND DUE_TIME >= #{query.dueTime}
            </if>
            <if test="query.content != null">
                AND CONTENT like #{query.content}
            </if>
            <if test="query.status != null">
                AND STATUS = #{query.status}
            </if>
            <if test="query.sortNo != null">
                AND SORT_NO > #{query.sortNo}
            </if>
        </where>
    </sql>

    <sql id="updateClause">
        <set>
            <if test="sortNo != null">
                sort_no = #{sortNo},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="dueTime != null">
                due_time = #{dueTime},
            </if>
            <if test="warnCnt != null">
                warn_cnt = #{warnCnt}
            </if>
            <if test="needDays != null">
                need_days = #{needDays}
            </if>
        </set>
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM task_list_node
        WHERE node_id = #{nodeId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.kevin.domain.ActivityNode">
        INSERT INTO task_list_node (node_id, activity_id, type,
                                    sort_no, content,
                                    status, remark, create_time,
                                    update_time, due_time, warn_cnt, need_days
        )
        VALUES (#{nodeId,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{sortNo},
                                            #{content,jdbcType=VARCHAR},
                                            #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
                                            #{createTime,jdbcType=TIMESTAMP},
                                            #{updateTime,jdbcType=TIMESTAMP}, #{dueTime,jdbcType=TIMESTAMP},
                #{warnCnt,jdbcType=INTEGER}, #{needDays}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.kevin.domain.ActivityNode">
        UPDATE task_list_node
        <include refid="updateClause" />
        WHERE node_id = #{nodeId,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="baseColumns"/>
        FROM task_list_node
        WHERE node_id = #{nodeId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="baseColumns"/>
        FROM task_list_node
    </select>

    <select id="listByQuery" parameterType="cn.kevin.domain.query.ActivityNodeQuery" resultMap="BaseResultMap">
        SELECT
            <include refid="baseColumns" />
        FROM task_list_node
        <include refid="condition" />
        <if test="query.orderBy != null" >
            ORDER BY ${query.orderBy}
        </if>
        <if test="page != null">
            LIMIT #{page.offset}, #{page.pageSize}
        </if>
    </select>

    <update id="completedNode" parameterType="Integer">
        UPDATE task_list_node
        SET STATUS = 2
        WHERE node_id = #{nodeId}
    </update>
</mapper>